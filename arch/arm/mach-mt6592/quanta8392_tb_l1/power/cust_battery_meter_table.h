#ifndef _CUST_BATTERY_METER_TABLE_H
#define _CUST_BATTERY_METER_TABLE_H

#include <mach/mt_typedefs.h>

// ============================================================
// define
// ============================================================
#define BAT_NTC_10 1
#define BAT_NTC_47 0

#if (BAT_NTC_10 == 1)
#define RBAT_PULL_UP_R             16900
#define RBAT_PULL_DOWN_R		   27000
#endif

#if (BAT_NTC_47 == 1)
#define RBAT_PULL_UP_R             61900
#define RBAT_PULL_DOWN_R		  100000
#endif
#define RBAT_PULL_UP_VOLT          1800



// ============================================================
// ENUM
// ============================================================

// ============================================================
// structure
// ============================================================

// ============================================================
// typedef
// ============================================================
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// ============================================================
// External Variables
// ============================================================

// ============================================================
// External function
// ============================================================

// ============================================================
// <DOD, Battery_Voltage> Table
// ============================================================
#define MTK_MULTI_BAT_PROFILE_SUPPORT
#define MTK_GET_BATTERY_ID_BY_AUXADC
#define BATTERY_ID_CHANNEL_NUM 0//BATTER_AUXADC_NUMBER

#if (BAT_NTC_10 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[2][17] = {
        {
                {-20,76241},
                {-15,58649},
                {-10,45569},
                { -5,35735},
                {  0,28271},
                {  5,22551},
                { 10,18136},
                { 15,14696},
                { 20,11997},
                { 25,10000},
                { 30,8365},
                { 35,7011},
                { 40,5951},
                { 45,4992},
                { 50,4217},
                { 55,3579},
                { 60,3051}
        },
        {
                {-20,76241},
                {-15,58649},
                {-10,45569},
                { -5,35735},
                {  0,28271},
                {  5,22551},
                { 10,18136},
                { 15,14696},
                { 20,11997},
                { 25,10000},
                { 30,8365},
                { 35,7011},
                { 40,5951},
                { 45,4992},
                { 50,4217},
                { 55,3579},
                { 60,3051}
        }
    };
#endif

#if (BAT_NTC_47 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[] = {
        {-20,483954},
        {-15,360850},
        {-10,271697},
        { -5,206463},
        {  0,158214},
        {  5,122259},
        { 10,95227},
        { 15,74730},
        { 20,59065},
        { 25,47000},
        { 30,37643},
        { 35,30334},
        { 40,24591},
        { 45,20048},
        { 50,16433},
        { 55,13539},
        { 60,11210}
    };
#endif

/* Qmax for battery  */
kal_int32 g_Q_MAX_POS_50[] = {4450, 4450};
kal_int32 g_Q_MAX_POS_25[] = {4377, 4377};
kal_int32 g_Q_MAX_POS_0[] = {2376, 2376};
kal_int32 g_Q_MAX_NEG_10[] = {1676, 1676};

kal_int32 g_Q_MAX_POS_50_H_CURRENT[] = {4450, 4450};
kal_int32 g_Q_MAX_POS_25_H_CURRENT[] = {4377, 4377};
kal_int32 g_Q_MAX_POS_0_H_CURRENT[] = {2376, 2376};
kal_int32 g_Q_MAX_NEG_10_H_CURRENT[] = {1676, 1676};

#define TOTAL_BATTERY_NUMBER 2
kal_int32 g_battery_id_voltage[] = {500000, 1330000};//0~0.5V for battery 0, 0.5~1V for battery 1, -1 for the last one (battery 2)


// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[2][91] =
{
{
        {0 ,  4317},
        {3 ,  4280},
        {6 ,  4265},
        {9 ,  4250},
        {12 , 4237},
        {14 , 4227},
        {17 , 4214},
        {20 , 4200},
        {23 , 4186},
        {26 , 4171},
        {29 , 4156},
        {32 , 4139},
        {35 , 4121},
        {38 , 4099},
        {41 , 4077},
        {44 , 4057},
        {47 , 4039},
        {50 , 4023},
        {53 , 4008},
        {56 , 3996},
        {59 , 3984},
        {62 , 3973},
        {65 , 3963},
        {68 , 3953},
        {71 , 3943},
        {74 , 3933},
        {77 , 3923},
        {80 , 3912},
        {83 , 3902},
        {86 , 3892},
        {89 , 3883},
        {92 , 3875},
        {95 , 3868},
        {98 , 3861},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857}
},
{
        {0 ,  4317},
        {3 ,  4280},
        {6 ,  4265},
        {9 ,  4250},
        {12 , 4237},
        {14 , 4227},
        {17 , 4214},
        {20 , 4200},
        {23 , 4186},
        {26 , 4171},
        {29 , 4156},
        {32 , 4139},
        {35 , 4121},
        {38 , 4099},
        {41 , 4077},
        {44 , 4057},
        {47 , 4039},
        {50 , 4023},
        {53 , 4008},
        {56 , 3996},
        {59 , 3984},
        {62 , 3973},
        {65 , 3963},
        {68 , 3953},
        {71 , 3943},
        {74 , 3933},
        {77 , 3923},
        {80 , 3912},
        {83 , 3902},
        {86 , 3892},
        {89 , 3883},
        {92 , 3875},
        {95 , 3868},
        {98 , 3861},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857},
        {100, 3857}
}

};

// T1 0C
BATTERY_PROFILE_STRUC battery_profile_t1[2][91] =
{
{
        {0  , 4322},
		{2  , 4278},
        {4  , 4259},
        {6  , 4245},
        {8  , 4231},
        {11 , 4213},
        {13 , 4201},
        {15 , 4189},
        {17 , 4178},
        {19 , 4167},
        {21 , 4155},
        {23 , 4144},
        {25 , 4133},
        {27 , 4123},
        {29 , 4112},
        {32 , 4097},
        {34 , 4088},
        {36 , 4079},
        {38 , 4069},
        {40 , 4058},
        {42 , 4046},
        {44 , 4034},
        {46 , 4022},
        {48 , 4012},
        {50 , 4002},
        {53 , 3988},
        {55 , 3980},
        {57 , 3971},
        {59 , 3963},
        {61 , 3955},
        {63 , 3947},
        {65 , 3938},
        {67 , 3928},
        {69 , 3917},
        {72 , 3901},
        {74 , 3890},
        {76 , 3881},
        {78 , 3872},
        {80 , 3865},
        {82 , 3858},
        {84 , 3852},
        {86 , 3846},
        {88 , 3841},
        {90 , 3836},
        {93 , 3829},
        {95 , 3825},
        {97 , 3821},
        {99 , 3816},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813}

},
{
        {0  , 4322},
        {2  , 4278},
        {4  , 4259},
        {6  , 4245},
        {8  , 4231},
        {11 , 4213},
        {13 , 4201},
        {15 , 4189},
        {17 , 4178},
        {19 , 4167},
        {21 , 4155},
        {23 , 4144},
        {25 , 4133},
        {27 , 4123},
        {29 , 4112},
        {32 , 4097},
        {34 , 4088},
        {36 , 4079},
        {38 , 4069},
        {40 , 4058},
        {42 , 4046},
        {44 , 4034},
        {46 , 4022},
        {48 , 4012},
        {50 , 4002},
        {53 , 3988},
        {55 , 3980},
        {57 , 3971},
        {59 , 3963},
        {61 , 3955},
        {63 , 3947},
        {65 , 3938},
        {67 , 3928},
        {69 , 3917},
        {72 , 3901},
        {74 , 3890},
        {76 , 3881},
        {78 , 3872},
        {80 , 3865},
        {82 , 3858},
        {84 , 3852},
        {86 , 3846},
        {88 , 3841},
        {90 , 3836},
        {93 , 3829},
        {95 , 3825},
        {97 , 3821},
        {99 , 3816},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813},
        {100, 3813}
}

};

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[2][91] =
{
{
        {0, 4335},
        {2, 4302},
        {4, 4279},
        {5, 4268},
        {6, 4257},
        {7, 4246},
        {8, 4235},
        {9, 4225},
        {10,4214},
        {12,4193},
        {13,4182},
        {14,4172},
        {15,4162},
        {16,4152},
        {17,4141},
        {18,4131},
        {20,4112},
        {21,4102},
        {22,4092},
        {23,4083},
        {24,4075},
        {25,4066},
        {26,4057},
        {28,4037},
        {29,4028},
        {30,4018},
        {31,4009},
        {32,4001},
        {33,3993},
        {34,3985},
        {36,3971},
        {37,3965},
        {38,3958},
        {39,3951},
        {40,3944},
        {41,3937},
        {42,3928},
        {44,3909},
        {45,3896},
        {46,3884},
        {47,3874},
        {48,3866},
        {49,3859},
        {50,3854},
        {52,3843},
        {53,3839},
        {54,3834},
        {55,3830},
        {56,3826},
        {57,3822},
        {58,3818},
        {60,3811},
        {61,3808},
        {62,3804},
        {63,3801},
        {64,3798},
        {65,3795},
        {66,3792},
        {68,3787},
        {69,3785},
        {70,3782},
        {71,3780},
        {72,3777},
        {73,3775},
        {74,3773},
        {76,3768},
        {77,3764},
        {78,3761},
        {79,3757},
        {80,3753},
        {81,3748},
        {82,3743},
        {84,3734},
        {85,3727},
        {86,3718},
        {87,3710},
        {88,3700},
        {89,3691},
        {90,3687},
        {92,3685},
        {93,3684},
        {94,3683},
        {95,3681},
        {96,3678},
        {97,3673},
        {98,3656},
        {100,3574},
        {100,3574},
        {100,3574},
        {100,3574},
        {100,3574}
},
{
        {0, 4335},
        {2, 4302},
        {4, 4279},
        {5, 4268},
        {6, 4257},
        {7, 4246},
        {8, 4235},
        {9, 4225},
        {10,4214},
        {12,4193},
        {13,4182},
        {14,4172},
        {15,4162},
        {16,4152},
        {17,4141},
        {18,4131},
        {20,4112},
        {21,4102},
        {22,4092},
        {23,4083},
        {24,4075},
        {25,4066},
        {26,4057},
        {28,4037},
        {29,4028},
        {30,4018},
        {31,4009},
        {32,4001},
        {33,3993},
        {34,3985},
        {36,3971},
        {37,3965},
        {38,3958},
        {39,3951},
        {40,3944},
        {41,3937},
        {42,3928},
        {44,3909},
        {45,3896},
        {46,3884},
        {47,3874},
        {48,3866},
        {49,3859},
        {50,3854},
        {52,3843},
        {53,3839},
        {54,3834},
        {55,3830},
        {56,3826},
        {57,3822},
        {58,3818},
        {60,3811},
        {61,3808},
        {62,3804},
        {63,3801},
        {64,3798},
        {65,3795},
        {66,3792},
        {68,3787},
        {69,3785},
        {70,3782},
        {71,3780},
        {72,3777},
        {73,3775},
        {74,3773},
        {76,3768},
        {77,3764},
        {78,3761},
        {79,3757},
        {80,3753},
        {81,3748},
        {82,3743},
        {84,3734},
        {85,3727},
        {86,3718},
        {87,3710},
        {88,3700},
        {89,3691},
        {90,3687},
        {92,3685},
        {93,3684},
        {94,3683},
        {95,3681},
        {96,3678},
        {97,3673},
        {98,3656},
        {100,3574},
        {100,3574},
        {100,3574},
        {100,3574},
        {100,3574}
}


};

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[2][91] =
{
{
        {0, 4339},
        {2, 4310},
        {3, 4298},
        {5, 4276},
        {6, 4265},
        {7, 4254},
        {8, 4243},
        {9, 4232},
        {10, 4221},
        {11, 4210},
        {12, 4199},
        {14, 4178},
        {15, 4167},
        {16, 4157},
        {17, 4146},
        {18, 4136},
        {19, 4126},
        {20, 4116},
        {21, 4106},
        {23, 4086},
        {24, 4076},
        {25, 4068},
        {26, 4059},
        {27, 4049},
        {28, 4040},
        {29, 4030},
        {30, 4021},
        {32, 4004},
        {33, 3995},
        {34, 3988},
        {35, 3980},
        {36, 3973},
        {37, 3965},
        {38, 3958},
        {39, 3951},
        {41, 3936},
        {42, 3929},
        {43, 3921},
        {44, 3911},
        {45, 3899},
        {46, 3887},
        {47, 3876},
        {48, 3867},
        {50, 3854},
        {51, 3849},
        {52, 3844},
        {53, 3839},
        {54, 3834},
        {55, 3830},
        {56, 3825},
        {57, 3821},
        {59, 3813},
        {60, 3810},
        {61, 3806},
        {62, 3803},
        {63, 3799},
        {64, 3796},
        {65, 3793},
        {66, 3790},
        {67, 3787},
        {69, 3782},
        {70, 3779},
        {71, 3776},
        {72, 3772},
        {73, 3766},
        {74, 3760},
        {75, 3756},
        {76, 3753},
        {78, 3746},
        {79, 3742},
        {80, 3737},
        {81, 3733},
        {82, 3729},
        {83, 3724},
        {84, 3718},
        {85, 3710},
        {87, 3693},
        {88, 3683},
        {89, 3678},
        {90, 3676},
        {91, 3675},
        {92, 3674},
        {93, 3672},
        {94, 3671},
        {96, 3664},
        {97, 3648},
        {98, 3616},
        {100, 3508},
        {100, 3508},
        {100, 3508},
        {100, 3508}
},
{
        {0, 4339},
        {2, 4310},
        {3, 4298},
        {5, 4276},
        {6, 4265},
        {7, 4254},
        {8, 4243},
        {9, 4232},
        {10, 4221},
        {11, 4210},
        {12, 4199},
        {14, 4178},
        {15, 4167},
        {16, 4157},
        {17, 4146},
        {18, 4136},
        {19, 4126},
        {20, 4116},
        {21, 4106},
        {23, 4086},
        {24, 4076},
        {25, 4068},
        {26, 4059},
        {27, 4049},
        {28, 4040},
        {29, 4030},
        {30, 4021},
        {32, 4004},
        {33, 3995},
        {34, 3988},
        {35, 3980},
        {36, 3973},
        {37, 3965},
        {38, 3958},
        {39, 3951},
        {41, 3936},
        {42, 3929},
        {43, 3921},
        {44, 3911},
        {45, 3899},
        {46, 3887},
        {47, 3876},
        {48, 3867},
        {50, 3854},
        {51, 3849},
        {52, 3844},
        {53, 3839},
        {54, 3834},
        {55, 3830},
        {56, 3825},
        {57, 3821},
        {59, 3813},
        {60, 3810},
        {61, 3806},
        {62, 3803},
        {63, 3799},
        {64, 3796},
        {65, 3793},
        {66, 3790},
        {67, 3787},
        {69, 3782},
        {70, 3779},
        {71, 3776},
        {72, 3772},
        {73, 3766},
        {74, 3760},
        {75, 3756},
        {76, 3753},
        {78, 3746},
        {79, 3742},
        {80, 3737},
        {81, 3733},
        {82, 3729},
        {83, 3724},
        {84, 3718},
        {85, 3710},
        {87, 3693},
        {88, 3683},
        {89, 3678},
        {90, 3676},
        {91, 3675},
        {92, 3674},
        {93, 3672},
        {94, 3671},
        {96, 3664},
        {97, 3648},
        {98, 3616},
        {100, 3508},
        {100, 3508},
        {100, 3508},
        {100, 3508}

}

};

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
	{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0},
{0  , 0}
};

// ============================================================
// <Rbat, Battery_Voltage> Table
// ============================================================
// T0 -10C
R_PROFILE_STRUC r_profile_t0[2][91] =
{
{
	{443,  4317},
	{487,  4280},
	{501,  4265},
	{510,  4250},
	{519,  4237},
	{528,  4227},
	{536,  4214},
	{545,  4200},
	{553,  4186},
	{565,  4171},
	{582,  4156},
	{602,  4139},
	{630,  4121},
	{671,  4099},
	{714,  4077},
	{744,  4057},
	{763,  4039},
	{772,  4023},
	{776,  4008},
	{784,  3996},
	{790,  3984},
	{797,  3973},
	{803,  3963},
	{809,  3953},
	{813,  3943},
	{816,  3933},
	{820,  3923},
	{825,  3912},
	{827,  3902},
	{826,  3892},
	{830,  3883},
	{834,  3875},
	{840,  3868},
	{845,  3861},
	{851,  3857},
	{902,  3857},
	{907,  3857},
	{913,  3857},
	{920,  3857},
	{930,  3857},
	{937,  3857},
	{945,  3857},
	{950,  3857},
	{958,  3857},
	{966,  3857},
	{975,  3857},
	{985,  3857},
	{994,  3857},
	{1007, 3857},
	{1020, 3857},
	{1034, 3857},
	{1051, 3857},
	{1065, 3857},
	{1078, 3857},
	{1093, 3857},
	{1106, 3857},
	{1121, 3857},
    {1136, 3857},
    {1154, 3857},
    {1164, 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
	{851  ,3857},
	{851  ,3857}
},
{
    {443,  4317},
	{487,  4280},
	{501,  4265},
	{510,  4250},
	{519,  4237},
	{528,  4227},
	{536,  4214},
	{545,  4200},
	{553,  4186},
	{565,  4171},
	{582,  4156},
	{602,  4139},
	{630,  4121},
	{671,  4099},
	{714,  4077},
	{744,  4057},
	{763,  4039},
	{772,  4023},
	{776,  4008},
	{784,  3996},
	{790,  3984},
	{797,  3973},
	{803,  3963},
	{809,  3953},
	{813,  3943},
	{816,  3933},
	{820,  3923},
	{825,  3912},
	{827,  3902},
	{826,  3892},
	{830,  3883},
	{834,  3875},
	{840,  3868},
	{845,  3861},
	{851,  3857},
	{902,  3857},
	{907,  3857},
	{913,  3857},
	{920,  3857},
	{930,  3857},
	{937,  3857},
	{945,  3857},
	{950,  3857},
	{958,  3857},
	{966,  3857},
	{975,  3857},
	{985,  3857},
	{994,  3857},
	{1007, 3857},
	{1020, 3857},
	{1034, 3857},
	{1051, 3857},
	{1065, 3857},
	{1078, 3857},
	{1093, 3857},
	{1106, 3857},
	{1121, 3857},
    {1136, 3857},
    {1154, 3857},
    {1164, 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851 , 3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
    {851  ,3857},
	{851  ,3857},
	{851  ,3857}
}
};

// T1 0C
R_PROFILE_STRUC r_profile_t1[2][91] =
{
{
	{315 , 4322},
	{331 , 4278},
	{337 , 4259},
	{341 , 4245},
	{344 , 4231},
	{349 , 4213},
	{350 , 4201},
	{351 , 4189},
	{351 , 4178},
	{355 , 4167},
	{356 , 4155},
	{359 , 4144},
	{362 , 4133},
	{364 , 4123},
	{365 , 4112},
	{368 , 4097},
	{371 , 4088},
	{377 , 4079},
	{382 , 4069},
	{386 , 4058},
	{389 , 4046},
	{390 , 4034},
	{391 , 4022},
	{394 , 4012},
	{396 , 4002},
	{398 , 3988},
	{400 , 3980},
	{403 , 3971},
	{405 , 3963},
	{408 , 3955},
	{409 , 3947},
	{408 , 3938},
	{405 , 3928},
	{399 , 3917},
	{395 , 3901},
	{391 , 3890},
	{390 , 3881},
	{389 , 3872},
	{390 , 3865},
	{390 , 3858},
	{394 , 3852},
	{395 , 3846},
	{399 , 3841},
	{403 , 3836},
	{406 , 3829},
	{410 , 3825},
	{412 , 3821},
	{416 , 3816},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
	{421 , 3813},
	{421 , 3813}
},
{
    {315 , 4322},
	{331 , 4278},
	{337 , 4259},
	{341 , 4245},
	{344 , 4231},
	{349 , 4213},
	{350 , 4201},
	{351 , 4189},
	{351 , 4178},
	{355 , 4167},
	{356 , 4155},
	{359 , 4144},
	{362 , 4133},
	{364 , 4123},
	{365 , 4112},
	{368 , 4097},
	{371 , 4088},
	{377 , 4079},
	{382 , 4069},
	{386 , 4058},
	{389 , 4046},
	{390 , 4034},
	{391 , 4022},
	{394 , 4012},
	{396 , 4002},
	{398 , 3988},
	{400 , 3980},
	{403 , 3971},
	{405 , 3963},
	{408 , 3955},
	{409 , 3947},
	{408 , 3938},
	{405 , 3928},
	{399 , 3917},
	{395 , 3901},
	{391 , 3890},
	{390 , 3881},
	{389 , 3872},
	{390 , 3865},
	{390 , 3858},
	{394 , 3852},
	{395 , 3846},
	{399 , 3841},
	{403 , 3836},
	{406 , 3829},
	{410 , 3825},
	{412 , 3821},
	{416 , 3816},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
	{421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
    {421 , 3813},
	{421 , 3813},
	{421 , 3813}
}

};

// T2 25C
R_PROFILE_STRUC r_profile_t2[2][91] =
{
{
	{158, 4335},
	{158, 4302},
	{158, 4279},
	{159, 4268},
	{159, 4257},
	{160, 4246},
	{160, 4235},
	{161, 4225},
	{161, 4214},
	{162, 4193},
	{162, 4182},
	{161, 4172},
	{164, 4162},
	{165, 4152},
	{165, 4141},
	{166, 4131},
	{167, 4112},
	{168, 4102},
	{169, 4092},
	{170, 4083},
	{172, 4075},
	{172, 4066},
	{174, 4057},
	{175, 4037},
	{176, 4028},
	{178, 4018},
	{179, 4009},
	{181, 4001},
	{183, 3993},
	{184, 3985},
	{187, 3971},
	{187, 3965},
	{192, 3958},
	{195, 3951},
	{198, 3944},
	{200, 3937},
	{199, 3928},
	{194, 3909},
	{184, 3896},
	{174, 3884},
	{168, 3874},
	{165, 3866},
	{164, 3859},
	{165, 3854},
	{165, 3843},
	{166, 3839},
	{166, 3834},
	{167, 3830},
	{168, 3826},
	{169, 3822},
	{169, 3818},
	{168, 3811},
	{172, 3808},
	{173, 3804},
	{174, 3801},
	{175, 3798},
	{176, 3795},
    {177, 3792},
    {178, 3787},
    {179, 3785},
    {179, 3782},
    {180, 3780},
    {179, 3777},
    {179, 3775},
    {179, 3773},
    {180, 3768},
    {180, 3764},
    {181, 3761},
    {181, 3757},
    {181, 3753},
    {180, 3748},
    {182, 3743},
    {186, 3734},
    {186, 3727},
    {187, 3718},
    {189, 3710},
    {188, 3700},
    {187, 3691},
    {188, 3687},
    {191, 3685},
    {195, 3684},
    {201, 3683},
    {207, 3681},
    {215, 3678},
    {218, 3673},
    {212, 3656},
    {220, 3574},
    {231, 3574},
    {251, 3574},
	{251, 3574},
	{251, 3574}
},
{
    {158, 4335},
	{158, 4302},
	{158, 4279},
	{159, 4268},
	{159, 4257},
	{160, 4246},
	{160, 4235},
	{161, 4225},
	{161, 4214},
	{162, 4193},
	{162, 4182},
	{161, 4172},
	{164, 4162},
	{165, 4152},
	{165, 4141},
	{166, 4131},
	{167, 4112},
	{168, 4102},
	{169, 4092},
	{170, 4083},
	{172, 4075},
	{172, 4066},
	{174, 4057},
	{175, 4037},
	{176, 4028},
	{178, 4018},
	{179, 4009},
	{181, 4001},
	{183, 3993},
	{184, 3985},
	{187, 3971},
	{187, 3965},
	{192, 3958},
	{195, 3951},
	{198, 3944},
	{200, 3937},
	{199, 3928},
	{194, 3909},
	{184, 3896},
	{174, 3884},
	{168, 3874},
	{165, 3866},
	{164, 3859},
	{165, 3854},
	{165, 3843},
	{166, 3839},
	{166, 3834},
	{167, 3830},
	{168, 3826},
	{169, 3822},
	{169, 3818},
	{168, 3811},
	{172, 3808},
	{173, 3804},
	{174, 3801},
	{175, 3798},
	{176, 3795},
    {177, 3792},
    {178, 3787},
    {179, 3785},
    {179, 3782},
    {180, 3780},
    {179, 3777},
    {179, 3775},
    {179, 3773},
    {180, 3768},
    {180, 3764},
    {181, 3761},
    {181, 3757},
    {181, 3753},
    {180, 3748},
    {182, 3743},
    {186, 3734},
    {186, 3727},
    {187, 3718},
    {189, 3710},
    {188, 3700},
    {187, 3691},
    {188, 3687},
    {191, 3685},
    {195, 3684},
    {201, 3683},
    {207, 3681},
    {215, 3678},
    {218, 3673},
    {212, 3656},
    {220, 3574},
    {231, 3574},
    {251, 3574},
	{251, 3574},
	{251, 3574}
}
};

// T3 50C
R_PROFILE_STRUC r_profile_t3[2][91] =
{
{
	{118, 4339},
	{118, 4310},
	{118, 4298},
	{118, 4276},
	{118, 4265},
	{119, 4254},
	{119, 4243},
	{119, 4232},
	{119, 4221},
	{120, 4210},
	{120, 4199},
	{121, 4178},
	{121, 4167},
	{122, 4157},
	{122, 4146},
	{123, 4136},
	{123, 4126},
	{124, 4116},
	{124, 4106},
	{125, 4086},
	{126, 4076},
	{127, 4068},
	{127, 4059},
	{128, 4049},
	{129, 4040},
	{129, 4030},
	{130, 4021},
	{131, 4004},
	{132, 3995},
	{134, 3988},
	{135, 3980},
	{136, 3973},
	{138, 3965},
	{140, 3958},
	{142, 3951},
	{145, 3936},
	{147, 3929},
	{148, 3921},
	{146, 3911},
	{137, 3899},
	{128, 3887},
	{124, 3876},
	{122, 3867},
	{121, 3854},
	{121, 3849},
	{121, 3844},
	{122, 3839},
	{122, 3834},
	{123, 3830},
	{123, 3825},
	{124, 3821},
	{125, 3813},
	{126, 3810},
	{127, 3806},
	{128, 3803},
	{129, 3799},
	{130, 3796},
    {131, 3793},
    {132, 3790},
    {133, 3787},
    {134, 3782},
    {134, 3779},
    {134, 3776},
    {130, 3772},
    {124, 3766},
    {126, 3760},
    {126, 3756},
    {126, 3753},
    {126, 3746},
    {126, 3742},
    {126, 3737},
    {126, 3733},
    {127, 3729},
    {127, 3724},
    {127, 3718},
    {127, 3710},
    {127, 3693},
    {126, 3683},
    {126, 3678},
    {127, 3676},
    {129, 3675},
    {131, 3674},
    {133, 3672},
    {135, 3671},
    {136, 3664},
    {134, 3648},
    {138, 3616},
    {145, 3508},
    {151, 3508},
	{151, 3508},
	{151, 3508}
},
{
    {118, 4339},
	{118, 4310},
	{118, 4298},
	{118, 4276},
	{118, 4265},
	{119, 4254},
	{119, 4243},
	{119, 4232},
	{119, 4221},
	{120, 4210},
	{120, 4199},
	{121, 4178},
	{121, 4167},
	{122, 4157},
	{122, 4146},
	{123, 4136},
	{123, 4126},
	{124, 4116},
	{124, 4106},
	{125, 4086},
	{126, 4076},
	{127, 4068},
	{127, 4059},
	{128, 4049},
	{129, 4040},
	{129, 4030},
	{130, 4021},
	{131, 4004},
	{132, 3995},
	{134, 3988},
	{135, 3980},
	{136, 3973},
	{138, 3965},
	{140, 3958},
	{142, 3951},
	{145, 3936},
	{147, 3929},
	{148, 3921},
	{146, 3911},
	{137, 3899},
	{128, 3887},
	{124, 3876},
	{122, 3867},
	{121, 3854},
	{121, 3849},
	{121, 3844},
	{122, 3839},
	{122, 3834},
	{123, 3830},
	{123, 3825},
	{124, 3821},
	{125, 3813},
	{126, 3810},
	{127, 3806},
	{128, 3803},
	{129, 3799},
	{130, 3796},
    {131, 3793},
    {132, 3790},
    {133, 3787},
    {134, 3782},
    {134, 3779},
    {134, 3776},
    {130, 3772},
    {124, 3766},
    {126, 3760},
    {126, 3756},
    {126, 3753},
    {126, 3746},
    {126, 3742},
    {126, 3737},
    {126, 3733},
    {127, 3729},
    {127, 3724},
    {127, 3718},
    {127, 3710},
    {127, 3693},
    {126, 3683},
    {126, 3678},
    {127, 3676},
    {129, 3675},
    {131, 3674},
    {133, 3672},
    {135, 3671},
    {136, 3664},
    {134, 3648},
    {138, 3616},
    {145, 3508},
    {151, 3508},
	{151, 3508},
	{151, 3508}
}
};

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
        {0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
        {0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
        {0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
        {0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
        {0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
        {0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}
};

// ============================================================
// function prototype
// ============================================================
int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);

#endif	//#ifndef _CUST_BATTERY_METER_TABLE_H






